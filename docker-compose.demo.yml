# this file is configured to use traefik server for the host.
version: '3'

volumes:
    prometheus_data: {}
    grafana_data: {}
networks:
  traefik-net:
    external: true
services:
  prometheus:
    image: prom/prometheus:v2.35.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    
    networks:
      - traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prom.somethingforsale.tk`)"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.tls.certresolver=lets-encrypt"
      - "traefik.http.routers.prometheus.tls=true"
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    restart: always
    deploy:
      mode: global

  nodeexporter:
    image: prom/node-exporter:v1.3.1
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    container_name: nodeexporter
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - traefik-net

    restart: always
    deploy:
      mode: global

  alertmanager:
    image: prom/alertmanager:v0.24.0
    ports:
      - 9093:9093
    networks:
      - traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager.rule=Host(`alert.somethingforsale.tk`)"
      - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"
      - "traefik.http.routers.alertmanager.tls.certresolver=lets-encrypt"
      - "traefik.http.routers.alertmanager.tls=true"
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    deploy:
      mode: global


  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.44.0
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8081:8080
    networks:
      - traefik-net
    restart: always
    deploy:
      mode: global

  grafana:
    image: grafana/grafana:8.4.5
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    networks:
      - traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.somethingforsale.tk`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.tls.certresolver=lets-encrypt"
      - "traefik.http.routers.grafana.tls=true"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      

 # blackbox_exporter:
 #   image: prom/blackbox-exporter:v0.10.0
 #   ports:
 #     - 9115:9115
 #   networks:
 #     - traefik-net
 #   volumes:
 #     - ./blackboxexporter/:/etc/blackboxexporter/
#    command:
#      - '--config.file=/etc/blackboxexporter/config.yml'
#    restart: always
